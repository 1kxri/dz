#define _USE_MATH_DEFINES 
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>
#include <locale.h>
#include <conio.h>
void print_bytes(void* ptr, size_t size)
{
    unsigned char* byte_ptr = (unsigned char*)ptr;
    for (size_t i = 0; i < size; i++)
    {
        printf("%.2x ", byte_ptr[i]);
    }
    printf("\n"); 
}    
int main() {
    setlocale(LC_ALL, "RUS");
    // 1.
    int* pi, i = 5;
    float* pf, f = 2.1f;
    printf("%lu\n", sizeof(pi));
    printf("%lu\n", sizeof(pf));

    // 2.
    float PI = 3.14159, * p1, * p2;
    p1 = p2 = &PI;
    printf("\nПо адресу p1=%p хранится *p1=%g\n", p1, *p1);
    printf("По адресу p2=%p хранится *p2=%g\n", p2, *p2);

    // 3.
    _Bool* pа, x = 5;
    pа = &x;
    printf("\nПо адресу %p хранится *ptr=%g\n", pа, *pа);
    pа++;
    printf("По адресу %p хранится *ptr=%g\n", pа, *pа);
    pа--;
    printf("По адресу %p хранится *ptr=%g\n", pа, *pа);

    // 4. 
    float array[10] = { 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.0 };
    float* ptr_a;

    // 4.1 
    printf("\narray: %p\n", (void*)array);
    printf("&array[0]: %p\n", (void*)&array[0]);
    printf("&array: %p\n", (void*)&array);

    // 4.2 
    ptr_a = array;
    printf("\nУказатель ptr_a: %p, значение *ptr_a: %f\n", (void*)ptr_a, *ptr_a);
    ptr_a++;
    printf("ptr_a после ptr_a++: %p, значение *ptr_a: %f\n", (void*)ptr_a, *ptr_a);
    ptr_a += 4;
    printf("ptr_a после ptr_a + 4: %p, значение *ptr_a: %f\n", (void*)ptr_a, *ptr_a);
    ptr_a -= 2;
    printf("ptr_a после ptr_a - 2: %p, значение *ptr_a: %f\n", (void*)ptr_a, *ptr_a);

    // 4.3
    printf("\nПроход по массиву с увеличением указателя на 2:\n");
    for (ptr_a = array; ptr_a < array + 10; ptr_a += 2) 
    {
        printf("Указатель: %p, значение: %f\n", (void*)ptr_a, *ptr_a);
    }

    // 4.4 
    printf("\nПроход по массиву в обратном порядке:\n");
    ptr_a = array + 9; 
    for (int i = 0; i < 10; i++) 
    {
        printf("Указатель: %p, значение: %f\n", (void*)ptr_a, *ptr_a);
        ptr_a--; 
    }

    // 5.
    int x1 = 0x12345678;
    float y = 123.987;
    double z = 12345.9876;
    printf("\nБайты переменной int:\n");
    print_bytes(&x1, sizeof(x1)); 
    printf("Байты переменной float:\n");
    print_bytes(&y, sizeof(y)); 
    printf("Байты переменной double:\n");
    print_bytes(&z, sizeof(z)); 

    // dz
    double arr[1];
    int size_of_double = (char*)(&arr[1]) - (char*)(&arr[0]);
    printf("\nРазмер типа double в байтах: %d\n", size_of_double);
}
